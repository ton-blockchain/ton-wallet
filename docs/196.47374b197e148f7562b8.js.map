{"version":3,"file":"196.47374b197e148f7562b8.js","mappings":"sKACO,MAAMA,UAA+B,KACxC,WAAAC,GACIC,SAASC,WACTC,KAAKC,OAAS,WACdD,KAAKE,UAAaC,GAAQH,KAAKC,OAASE,EACxCH,KAAKI,aAAgBD,GAAQA,EAAIE,QAAQL,KAAKC,OAAQ,GAC1D,CACA,GAAAK,CAAIC,GACA,MAAMC,EAAQC,aAAaC,QAAQV,KAAKE,UAAUK,EAAQJ,MAC1D,OAAiB,OAAVK,EACDG,QAAQC,QAAQ,CACdJ,MAAOK,KAAKL,KAEdG,QAAQG,OAAO,qCACzB,CACA,GAAAC,CAAIR,GAEA,OADAE,aAAaO,QAAQhB,KAAKE,UAAUK,EAAQJ,KAAMc,KAAKV,EAAQC,QACxDG,QAAQC,QAAQ,CAAEJ,OAAO,GACpC,CACA,MAAAU,CAAOX,GACH,OAAIE,aAAaC,QAAQV,KAAKE,UAAUK,EAAQJ,OAC5CM,aAAaU,WAAWnB,KAAKE,UAAUK,EAAQJ,MACxCQ,QAAQC,QAAQ,CAAEJ,OAAO,KAGzBG,QAAQG,OAAO,qCAE9B,CACA,KAAAM,GACI,IAAK,MAAMjB,KAAOM,aACmB,IAA7BN,EAAIkB,QAAQrB,KAAKC,SACjBQ,aAAaU,WAAWhB,GAGhC,OAAOQ,QAAQC,QAAQ,CAAEJ,OAAO,GACpC,CACA,IAAAc,GACI,MAAMA,EAAOC,OAAOD,KAAKb,cACpBe,QAAOC,GAAgC,IAA3BA,EAAEJ,QAAQrB,KAAKC,UAC3ByB,IAAI1B,KAAKI,cACd,OAAOO,QAAQC,QAAQ,CAAEJ,MAAOc,GACpC,CACA,WAAAK,GACI,OAAOhB,QAAQC,QAAQ,CAAEJ,MAAO,OACpC,E","sources":["webpack://mytonwallet/./node_modules/capacitor-secure-storage-plugin/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class SecureStoragePluginWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.PREFIX = 'cap_sec_';\n        this.addPrefix = (key) => this.PREFIX + key;\n        this.removePrefix = (key) => key.replace(this.PREFIX, '');\n    }\n    get(options) {\n        const value = localStorage.getItem(this.addPrefix(options.key));\n        return value !== null\n            ? Promise.resolve({\n                value: atob(value),\n            })\n            : Promise.reject('Item with given key does not exist');\n    }\n    set(options) {\n        localStorage.setItem(this.addPrefix(options.key), btoa(options.value));\n        return Promise.resolve({ value: true });\n    }\n    remove(options) {\n        if (localStorage.getItem(this.addPrefix(options.key))) {\n            localStorage.removeItem(this.addPrefix(options.key));\n            return Promise.resolve({ value: true });\n        }\n        else {\n            return Promise.reject('Item with given key does not exist');\n        }\n    }\n    clear() {\n        for (const key in localStorage) {\n            if (key.indexOf(this.PREFIX) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n        return Promise.resolve({ value: true });\n    }\n    keys() {\n        const keys = Object.keys(localStorage)\n            .filter(k => k.indexOf(this.PREFIX) === 0)\n            .map(this.removePrefix);\n        return Promise.resolve({ value: keys });\n    }\n    getPlatform() {\n        return Promise.resolve({ value: 'web' });\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["SecureStoragePluginWeb","constructor","super","arguments","this","PREFIX","addPrefix","key","removePrefix","replace","get","options","value","localStorage","getItem","Promise","resolve","atob","reject","set","setItem","btoa","remove","removeItem","clear","indexOf","keys","Object","filter","k","map","getPlatform"],"sourceRoot":""}