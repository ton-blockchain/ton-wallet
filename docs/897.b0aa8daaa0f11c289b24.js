"use strict";(self.webpackChunkmytonwallet=self.webpackChunkmytonwallet||[]).push([[897],{52897:(e,t,i)=>{i.r(t),i.d(t,{CapacitorUSBPlugin:()=>h,HIDTransport:()=>f,listLedgerDevices:()=>g});var n=i(16546),r=i(71108),s=i(24450),c=i(13983),o=i(13648),d=i(27291),a=i(93031),u=i(36049),v=i(37968);var p=i(28452),l=i(48287).Buffer;const h=(0,n.F3)("CapacitorUSBPlugin",{web:()=>i.e(106).then(i.bind(i,11106)).then((e=>new e.CapacitorUSBPluginWeb))}),w=["I/O error","Attempt to invoke virtual method 'int android.hardware.usb.UsbDevice.getDeviceClass()' on a null object reference","Invalid channel","Permission denied by user for device"];async function g(){return(await h.getDeviceList()).devices.filter((e=>e.vendorId===r.v9))}const m=new d.B;h.addListener("onDeviceConnect",(e=>{if(e.vendorId!==r.v9)return;const t=(0,r.zH)(e.productId);m.next({type:"add",descriptor:e,deviceModel:t})})),h.addListener("onDeviceDisconnect",(e=>{if(e.vendorId!==r.v9)return;const t=(0,r.zH)(e.productId);m.next({type:"remove",descriptor:e,deviceModel:t})}));const I=m;class f extends c.Ay{constructor(e,t){super(),this.deviceId=e,this.deviceModel=(0,r.zH)(t)}static async list(){return this.isSupported?g():Promise.resolve([])}static listen(e){return this.isSupported?function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return(0,a.U)(1)((0,v.H)(e,(0,u.lI)(e)))}((0,v.H)(g()).pipe((0,p.Z)((e=>(0,v.H)(e.map((e=>({type:"add",descriptor:e,deviceModel:(0,r.zH)(e.productId)}))))))),I).subscribe(e):{}}static async open(e){try{if((await h.openDevice({deviceId:e.id})).success)return new f(e.id,e.productId);throw new Error}catch(e){if(w.includes(e.message))throw new s.DisconnectedDevice(e.message);throw e}}async exchange(e){return this.exchangeAtomicImpl((async()=>{try{const t=e.toString("hex");(0,o.log)("apdu",`=> ${t}`);const i=await h.exchange({deviceId:this.deviceId,apduHex:t}),n=l.from(i.response,"hex");return(0,o.log)("apdu",`<= ${n}`),n}catch(e){if(w.includes(e.message))throw this.emit("disconnect",e),new s.DisconnectedDeviceDuringOperation(e.message);throw e}}))}async close(){await this.exchangeBusyPromise,h.closeDevice({deviceId:this.deviceId})}}f.isSupported=()=>Promise.resolve(!0)}}]);
//# sourceMappingURL=897.b0aa8daaa0f11c289b24.js.map